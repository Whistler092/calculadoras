{"version":3,"sources":["creditSimulaltor.js","payrollSimulator.js","App.js","registerServiceWorker.js","index.js"],"names":["CreditSimulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","monto","target","value","setState","handleRateChange","tasa","handleMonthsChange","meses","handleSubmit","preventDefault","generatePayments","state","cuotas","montoInicial","parseFloat","push","id","renta","intereses","amortizacion","capital","formatMoney","convertPercentage","Math","pow","index","amount","decimalCount","arguments","length","undefined","toFixed","replace","e","console","log","num","map","i","react_default","a","createElement","key","Grid","Row","className","Col","xs","md","lg","onSubmit","FormGroup","InputGroup","Addon","FormControl","type","placeholder","onChange","Button","Table","striped","bordered","condensed","hover","obtenerCuotas","Component","PayrollSimulator","handleBasicChange","salarioBasico","handleDaysChange","dias","bind","assertThisInitialized","devengado","basico","auxilioTrasporte","total","deducciones","salud","pension","aportesParafiscales","Salud","FondoDePensiones","ARL","Parafiscales","Prima","Cesantias","InteresesDeCesantias","Vacaciones","Dotacion","subtotal","netoPagado","doMaths","_this$state","devengadoBasico","devengadoAuxilio","devengadoTotal","deduccionSalud","deduccionPension","deduccionTotal","parafiscalSalud","parafiscalFondoPensiones","parafiscalARL","parafiscalParafiscales","parafiscalPrima","parafiscalCesantias","parafiscalInteresesCesantias","parafiscalVacaciones","parafiscalDotacion","prafiscalSubtotal","days","parseInt","_this2","controlId","validationState","getValidationState","Feedback","HelpBlock","ListGroup","ListGroupItem","header","bsStyle","bsSize","App","handleSelect","concat","Tabs","activeKey","onSelect","Tab","eventKey","title","creditSimulaltor","src_payrollSimulator","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.265edf81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table, FormGroup, InputGroup, FormControl, Button, Grid, Row, Col } from 'react-bootstrap';\n\nclass CreditSimulator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            monto: 0,\n            tasa: 1.02,\n            meses: 12\n        };\n\n        //this.handleChange = this.handleChange.bind(this);\n        //this.handleRateChange = this.handleRateChange.bind(this);\n        //this.handleMonthsChange = this.handleMonthsChange.bind(this);\n\n\n        //this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.generatePayments();\n\n    }\n\n    handleChange = (event) => {\n        let monto = event.target.value;\n        this.setState({\n            monto\n        });\n    }\n    handleRateChange = (event) => {\n        this.setState({\n            tasa: event.target.value,\n        })\n    }\n    handleMonthsChange = (event) => {\n\n        this.setState({\n            meses: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.generatePayments();\n    }\n\n    generatePayments() {\n        const cuotas = [];\n        /*console.log(\"generatePayments\", this.state.monto);*/\n\n        if (this.state.monto === 0 || this.state.monto === \"\") {\n            this.setState({\n                cuotas: null\n            })\n            return;\n        }\n        let montoInicial = parseFloat(this.state.monto);\n        cuotas.push({\n            id: 0,\n            renta: 0,\n            intereses: 0,\n            amortizacion: 0,\n            capital: this.formatMoney(montoInicial)\n        })\n\n        const tasa = this.convertPercentage(this.state.tasa) / 12;\n        const renta = (montoInicial /\n            (\n                (1 - Math.pow((1 + tasa), -this.state.meses))\n                / tasa));\n\n        let monto = this.state.monto;\n        for (let index = 0; index < this.state.meses; index++) {\n\n            const intereses = monto * tasa;\n            const amortizacion = renta - (intereses);\n            monto -= amortizacion;\n\n            cuotas.push({\n                id: index + 1,\n                renta: this.formatMoney(renta),\n                intereses: this.formatMoney(intereses),\n                amortizacion: this.formatMoney(amortizacion),\n                capital: this.formatMoney(monto)\n            })\n        }\n\n        this.setState({\n            cuotas\n        })\n    }\n\n    formatMoney(amount, decimalCount = 2) {\n        try {\n            return amount.toFixed(decimalCount).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    convertPercentage(num) {\n        return (num / 100);\n    }\n\n    obtenerCuotas() {\n        return (\n            this.state.cuotas.map(i =>\n                <tr key={i.id}>\n                    <td>#{i.id}</td>\n                    <td>{i.renta}</td>\n                    <td>{i.intereses}</td>\n                    <td>{i.amortizacion}</td>\n                    <td>{i.capital}</td>\n                </tr>\n            )\n        )\n    }\n\n\n    render() {\n        return (\n            <Grid>\n\n                <Row className=\"show-grid\">\n                    <Col xs={12} md={12} lg={12}>\n                        <h1>Calculadora de crédito</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Addon>Monto Prestamo $</InputGroup.Addon>\n                                    <FormControl type=\"text\"\n                                        value={this.state.monto}\n                                        placeholder=\"Digita el monto de tu prestamo\"\n                                        onChange={this.handleChange} />\n                                    <InputGroup.Addon>.00</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Button>\n                                        <Button>Meses</Button>\n                                    </InputGroup.Button>\n                                    <FormControl type=\"text\"\n                                        value={this.state.meses}\n                                        placeholder=\"Digita la tasa \"\n                                        onChange={this.handleMonthsChange} />\n\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Button>\n                                        <Button>Tasa de Interes</Button>\n                                    </InputGroup.Button>\n                                    <FormControl type=\"text\"\n                                        value={this.state.tasa}\n                                        placeholder=\"Digita el número de meses\"\n                                        onChange={this.handleRateChange} />\n                                    <InputGroup.Addon>%</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n                            <Button type=\"submit\">Calcular</Button>\n                        </form>\n                        <br />\n                        {\n                            this.state.cuotas ?\n                                <Table striped bordered condensed hover>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Vlr. Cuota</th>\n                                            <th>Intereses</th>\n                                            <th>Amortización</th>\n                                            <th>Saldo</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.obtenerCuotas()}\n                                    </tbody>\n                                </Table>\n                                : <p>Digitar un valor de Monto</p>\n                        }\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nexport default CreditSimulator;\n","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, FormGroup, InputGroup, FormControl, HelpBlock, Grid, Row, Col, Button } from 'react-bootstrap';\nimport './payrollSimulator.css';\n\nclass PayrollSimulator extends Component {\n    constructor(props) {\n        super(props);\n\n        //this.handleBasicChange = this.handleBasicChange.bind(this);\n        //this.handleDaysChange = this.handleDaysChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            salarioBasico: 781242,\n            dias: 30,\n            devengado: {\n                basico: 0,\n                auxilioTrasporte: 0,\n                total: 0\n            },\n            deducciones: {\n                salud: 0,\n                pension: 0,\n                total: 0\n            },\n            aportesParafiscales: {\n                Salud: 0,\n                FondoDePensiones: 0,\n                ARL: 0,\n                Parafiscales: 0,\n                Prima: 0,\n                Cesantias: 0,\n                InteresesDeCesantias: 0,\n                Vacaciones: 0,\n                Dotacion: 0,\n                total: 0,\n                subtotal: 0\n            },\n            netoPagado: 0\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.doMaths();\n    }\n\n    componentDidMount() {\n        this.doMaths();\n    }\n\n    doMaths() {\n        const { salarioBasico, dias } = this.state;\n\n        /*DEVENGADOS*/\n        const topeAuxilioTrasporte = 1562484;\n        const auxilioTrasporte = 88211;\n        const devengadoBasico = (salarioBasico / 30) * dias;\n        const devengadoAuxilio = salarioBasico <= topeAuxilioTrasporte ? auxilioTrasporte : 0;\n        const devengadoTotal = devengadoAuxilio + devengadoBasico;\n\n        /*DEDUCCIONES*/\n        const porcentajeSalud = 0.04;\n        const porcentajePension = 0.04;\n        const deduccionSalud = devengadoBasico * porcentajeSalud;\n        const deduccionPension = devengadoBasico * porcentajePension;\n        const deduccionTotal = deduccionSalud + deduccionPension;\n\n        /*aportesParafiscales*/\n        const porcentajeParafiscalSalud = 0.085;\n        const porcentajeParafiscalFondoPensiones = 0.12;\n        const porcentajeParafiscalARL = 0.0052;\n        const porcentajeParafiscalParafiscales = 0.09;\n        const porcentajeParafiscalPrima = 0.0833;\n        const porcentajeParafiscalCesantias = 0.0833;\n        const porcentajeParafiscalInteresesCesantias = 0.01;\n        const porcentajeParafiscalVacaciones = 0.0417;\n        const porcentajeParafiscalDotacion = 0.05;\n        const parafiscalSalud = devengadoBasico * porcentajeParafiscalSalud;\n        const parafiscalFondoPensiones = devengadoBasico * porcentajeParafiscalFondoPensiones;\n        const parafiscalARL = devengadoBasico * porcentajeParafiscalARL;\n        const parafiscalParafiscales = devengadoBasico * porcentajeParafiscalParafiscales;\n        const parafiscalPrima = devengadoBasico * porcentajeParafiscalPrima;\n        const parafiscalCesantias = devengadoBasico * porcentajeParafiscalCesantias;\n        const parafiscalInteresesCesantias = devengadoBasico * porcentajeParafiscalInteresesCesantias;\n        const parafiscalVacaciones = devengadoBasico * porcentajeParafiscalVacaciones;\n        const parafiscalDotacion = devengadoBasico * porcentajeParafiscalDotacion;\n\n        const prafiscalSubtotal = parafiscalSalud +\n            parafiscalFondoPensiones +\n            parafiscalARL +\n            parafiscalParafiscales +\n            parafiscalPrima +\n            parafiscalCesantias +\n            parafiscalInteresesCesantias +\n            parafiscalVacaciones +\n            parafiscalDotacion;\n\n        this.setState({\n            devengado: {\n                basico: devengadoBasico,\n                auxilioTrasporte: devengadoAuxilio,\n                total: devengadoTotal\n            },\n            deducciones: {\n                salud: deduccionSalud,\n                pension: deduccionPension,\n                total: deduccionTotal\n            },\n            netoPagado: devengadoTotal - deduccionTotal,\n            aportesParafiscales: {\n                Salud: parafiscalSalud,\n                FondoDePensiones: parafiscalFondoPensiones,\n                ARL: parafiscalARL,\n                Parafiscales: parafiscalParafiscales,\n                Prima: parafiscalPrima,\n                Cesantias: parafiscalCesantias,\n                InteresesDeCesantias: parafiscalInteresesCesantias,\n                Vacaciones: parafiscalVacaciones,\n                Dotacion: parafiscalDotacion,\n                total: prafiscalSubtotal + devengadoTotal - deduccionTotal,\n                subtotal: prafiscalSubtotal\n            }\n        })\n    }\n\n    formatMoney(amount, decimalCount = 2) {\n        try {\n            return amount.toFixed(decimalCount).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    getValidationState() {\n        const days = parseInt(this.state.value);\n        if (days < 30 && days > 0) return 'success';\n        else if (days < 0) return 'warning';\n        else if (days > 30) return 'error';\n        return null;\n    }\n\n    handleBasicChange = (e) => {\n        this.setState({ salarioBasico: e.target.value })\n    }\n\n    handleDaysChange = (e) => {\n        this.setState({ dias: e.target.value })\n    }\n\n    render() {\n        return (\n            <Grid>\n                <Row className=\"show-grid\">\n                    <Col xs={12} md={12} lg={12}>\n                        <h1>Calculadora de Salarios</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Addon>Sueldo Básico $</InputGroup.Addon>\n                                    <FormControl type=\"text\"\n                                        value={this.formatMoney(this.state.salarioBasico)}\n                                        onChange={ (e) => this.handleBasicChange(e) } />\n                                    <InputGroup.Addon>.00</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                                validationState={this.getValidationState()}\n                            >\n                                <InputGroup>\n                                    <InputGroup.Addon>Días Liquidados</InputGroup.Addon>\n                                    <FormControl\n                                        type=\"text\"\n                                        value={this.state.dias}\n                                        placeholder=\"Entre 1 y 30 días\"\n                                        onChange={this.handleDaysChange}\n                                    />\n\n                                    <FormControl.Feedback />\n                                </InputGroup>\n                                <HelpBlock></HelpBlock>\n                            </FormGroup>\n                            <Button type=\"submit\">Calcular</Button>\n                        </form>\n\n                        <hr></hr>\n                        <div className=\"payroll-list-output\">\n                            <ListGroup>\n                                <ListGroupItem header=\"DEVENGADO\" bsStyle=\"info\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Básico\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.devengado.basico)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Auxilio de Trasporte\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.devengado.auxilioTrasporte)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong></strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong></strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"DEDUCCIONES\" bsStyle=\"danger\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Salud (4%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.deducciones.salud)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Pension (4%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.deducciones.pension)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>Total Deducciones</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.deducciones.total)}</strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"Neto Pagado\" bsSize=\"success\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.netoPagado)}</strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"Aportes Parafiscales\" bsStyle=\"info\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Salud (8.5%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Salud)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Fondo de Pensiones (12%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.FondoDePensiones)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                ARL (0.52%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.ARL)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Parafiscales (9%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Parafiscales)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Prima (8.33%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\" >\n                                                {this.formatMoney(this.state.aportesParafiscales.Prima)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Cesantias (8.33%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\" >\n                                                {this.formatMoney(this.state.aportesParafiscales.Cesantias)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Intereses de cesantias (1%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.InteresesDeCesantias)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Vacaciones (4.17%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Vacaciones)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Dotacion (5%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Dotacion)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>SubTotal</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.aportesParafiscales.subtotal)}</strong>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>Total</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.aportesParafiscales.total)}</strong>\n                                            </Col>\n                                        </Row>\n\n                                    </Grid>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </div>\n                    </Col>\n                </Row>\n            </Grid>\n        )\n    }\n}\n\nexport default PayrollSimulator;","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport './App.css';\nimport CreditSimulator from './creditSimulaltor';\nimport PayrollSimulator from './payrollSimulator';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      key: 2\n    };\n  }\n\n  handleSelect(key) {\n    console.log(`selected ${key}`);\n    this.setState({ key });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Tabs\n          activeKey={this.state.key}\n          onSelect={this.handleSelect}\n          id=\"controlled-tab\"\n        >\n          <Tab eventKey={1} title=\"Simulador de Créditos\">\n            <CreditSimulator />\n          </Tab>\n          <Tab eventKey={2} title=\"Simulador de Sueldos\">\n            <PayrollSimulator />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nregisterServiceWorker();\n\n"],"sourceRoot":""}