{"version":3,"sources":["creditSimulaltor.js","payrollSimulator.js","App.js","serviceWorker.js","index.js"],"names":["CreditSimulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","monto","tasa","meses","handleChange","bind","assertThisInitialized","handleRateChange","handleMonthsChange","handleSubmit","generatePayments","event","target","value","setState","preventDefault","cuotas","montoInicial","parseFloat","push","id","renta","intereses","amortizacion","capital","formatMoney","convertPercentage","Math","pow","index","amount","decimalCount","arguments","length","undefined","toFixed","replace","e","console","log","num","map","i","react_default","a","createElement","key","Grid","Row","className","Col","xs","md","lg","onSubmit","FormGroup","InputGroup","Addon","FormControl","type","placeholder","onChange","Button","Table","striped","bordered","condensed","hover","obtenerCuotas","Component","PayrollSimulator","handleBasicChange","handleDaysChange","salarioBasico","dias","devengado","basico","auxilioTrasporte","total","deducciones","salud","pension","aportesParafiscales","Salud","FondoDePensiones","ARL","Parafiscales","Prima","Cesantias","InteresesDeCesantias","Vacaciones","Dotacion","subtotal","netoPagado","doMaths","_this$state","devengadoBasico","devengadoAuxilio","devengadoTotal","deduccionSalud","deduccionPension","deduccionTotal","parafiscalSalud","parafiscalFondoPensiones","parafiscalARL","parafiscalParafiscales","parafiscalPrima","parafiscalCesantias","parafiscalInteresesCesantias","parafiscalVacaciones","parafiscalDotacion","prafiscalSubtotal","days","parseInt","controlId","validationState","getValidationState","Feedback","HelpBlock","ListGroup","ListGroupItem","header","bsStyle","bsSize","App","handleSelect","concat","Tabs","activeKey","onSelect","Tab","eventKey","title","creditSimulaltor","src_payrollSimulator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fffdf012.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Table, FormGroup, InputGroup, FormControl, Button, Grid, Row, Col } from 'react-bootstrap';\n\nclass CreditSimulator extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            monto: 0,\n            tasa: 1.02,\n            meses: 12\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRateChange = this.handleRateChange.bind(this);\n        this.handleMonthsChange = this.handleMonthsChange.bind(this);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.generatePayments();\n\n    }\n\n    handleChange(event) {\n        let monto = event.target.value;\n        this.setState({\n            monto\n        });\n    }\n    handleRateChange(event) {\n        this.setState({\n            tasa: event.target.value,\n        })\n    }\n    handleMonthsChange(event) {\n\n        this.setState({\n            meses: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.generatePayments();\n    }\n\n    generatePayments() {\n        const cuotas = [];\n        /*console.log(\"generatePayments\", this.state.monto);*/\n\n        if (this.state.monto === 0 || this.state.monto === \"\") {\n            this.setState({\n                cuotas: null\n            })\n            return;\n        }\n        let montoInicial = parseFloat(this.state.monto);\n        cuotas.push({\n            id: 0,\n            renta: 0,\n            intereses: 0,\n            amortizacion: 0,\n            capital: this.formatMoney(montoInicial)\n        })\n\n        const tasa = this.convertPercentage(this.state.tasa) / 12;\n        const renta = (montoInicial /\n            (\n                (1 - Math.pow((1 + tasa), -this.state.meses))\n                / tasa));\n\n        let monto = this.state.monto;\n        for (let index = 0; index < this.state.meses; index++) {\n\n            const intereses = monto * tasa;\n            const amortizacion = renta - (intereses);\n            monto -= amortizacion;\n\n            cuotas.push({\n                id: index + 1,\n                renta: this.formatMoney(renta),\n                intereses: this.formatMoney(intereses),\n                amortizacion: this.formatMoney(amortizacion),\n                capital: this.formatMoney(monto)\n            })\n        }\n\n        this.setState({\n            cuotas\n        })\n    }\n\n    formatMoney(amount, decimalCount = 2) {\n        try {\n            return amount.toFixed(decimalCount).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    convertPercentage(num) {\n        return (num / 100);\n    }\n\n    obtenerCuotas() {\n        return (\n            this.state.cuotas.map(i =>\n                <tr key={i.id}>\n                    <td>#{i.id}</td>\n                    <td>{i.renta}</td>\n                    <td>{i.intereses}</td>\n                    <td>{i.amortizacion}</td>\n                    <td>{i.capital}</td>\n                </tr>\n            )\n        )\n    }\n\n\n    render() {\n        return (\n            <Grid>\n\n                <Row className=\"show-grid\">\n                    <Col xs={12} md={12} lg={12}>\n                        <h1>Calculadora de crédito</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Addon>Monto Prestamo $</InputGroup.Addon>\n                                    <FormControl type=\"text\"\n                                        value={this.state.monto}\n                                        placeholder=\"Digita el monto de tu prestamo\"\n                                        onChange={this.handleChange} />\n                                    <InputGroup.Addon>.00</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Button>\n                                        <Button>Meses</Button>\n                                    </InputGroup.Button>\n                                    <FormControl type=\"text\"\n                                        value={this.state.meses}\n                                        placeholder=\"Digita la tasa \"\n                                        onChange={this.handleMonthsChange} />\n\n                                </InputGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Button>\n                                        <Button>Tasa de Interes</Button>\n                                    </InputGroup.Button>\n                                    <FormControl type=\"text\"\n                                        value={this.state.tasa}\n                                        placeholder=\"Digita el número de meses\"\n                                        onChange={this.handleRateChange} />\n                                    <InputGroup.Addon>%</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n                            <Button type=\"submit\">Calcular</Button>\n                        </form>\n                        <br />\n                        {\n                            this.state.cuotas ?\n                                <Table striped bordered condensed hover>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Vlr. Cuota</th>\n                                            <th>Intereses</th>\n                                            <th>Amortización</th>\n                                            <th>Saldo</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.obtenerCuotas()}\n                                    </tbody>\n                                </Table>\n                                : <p>Digitar un valor de Monto</p>\n                        }\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nexport default CreditSimulator;\n","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, FormGroup, InputGroup, FormControl, HelpBlock, Grid, Row, Col, Button } from 'react-bootstrap';\nimport './payrollSimulator.css';\n\nclass PayrollSimulator extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBasicChange = this.handleBasicChange.bind(this);\n        this.handleDaysChange = this.handleDaysChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            salarioBasico: 781242,\n            dias: 30,\n            devengado: {\n                basico: 0,\n                auxilioTrasporte: 0,\n                total: 0\n            },\n            deducciones: {\n                salud: 0,\n                pension: 0,\n                total: 0\n            },\n            aportesParafiscales: {\n                Salud: 0,\n                FondoDePensiones: 0,\n                ARL: 0,\n                Parafiscales: 0,\n                Prima: 0,\n                Cesantias: 0,\n                InteresesDeCesantias: 0,\n                Vacaciones: 0,\n                Dotacion: 0,\n                total: 0,\n                subtotal: 0\n            },\n            netoPagado: 0\n        };\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.doMaths();\n    }\n\n    componentDidMount() {\n        this.doMaths();\n    }\n\n    doMaths() {\n        const { salarioBasico, dias } = this.state;\n\n        /*DEVENGADOS*/\n        const topeAuxilioTrasporte = 1562484;\n        const auxilioTrasporte = 88211;\n        const devengadoBasico = (salarioBasico / 30) * dias;\n        const devengadoAuxilio = salarioBasico <= topeAuxilioTrasporte ? auxilioTrasporte : 0;\n        const devengadoTotal = devengadoAuxilio + devengadoBasico;\n\n        /*DEDUCCIONES*/\n        const porcentajeSalud = 0.04;\n        const porcentajePension = 0.04;\n        const deduccionSalud = devengadoBasico * porcentajeSalud;\n        const deduccionPension = devengadoBasico * porcentajePension;\n        const deduccionTotal = deduccionSalud + deduccionPension;\n\n        /*aportesParafiscales*/\n        const porcentajeParafiscalSalud = 0.085;\n        const porcentajeParafiscalFondoPensiones = 0.12;\n        const porcentajeParafiscalARL = 0.0052;\n        const porcentajeParafiscalParafiscales = 0.09;\n        const porcentajeParafiscalPrima = 0.0833;\n        const porcentajeParafiscalCesantias = 0.0833;\n        const porcentajeParafiscalInteresesCesantias = 0.01;\n        const porcentajeParafiscalVacaciones = 0.0417;\n        const porcentajeParafiscalDotacion = 0.05;\n        const parafiscalSalud = devengadoBasico * porcentajeParafiscalSalud;\n        const parafiscalFondoPensiones = devengadoBasico * porcentajeParafiscalFondoPensiones;\n        const parafiscalARL = devengadoBasico * porcentajeParafiscalARL;\n        const parafiscalParafiscales = devengadoBasico * porcentajeParafiscalParafiscales;\n        const parafiscalPrima = devengadoBasico * porcentajeParafiscalPrima;\n        const parafiscalCesantias = devengadoBasico * porcentajeParafiscalCesantias;\n        const parafiscalInteresesCesantias = devengadoBasico * porcentajeParafiscalInteresesCesantias;\n        const parafiscalVacaciones = devengadoBasico * porcentajeParafiscalVacaciones;\n        const parafiscalDotacion = devengadoBasico * porcentajeParafiscalDotacion;\n\n        const prafiscalSubtotal = parafiscalSalud +\n            parafiscalFondoPensiones +\n            parafiscalARL +\n            parafiscalParafiscales +\n            parafiscalPrima +\n            parafiscalCesantias +\n            parafiscalInteresesCesantias +\n            parafiscalVacaciones +\n            parafiscalDotacion;\n\n        this.setState({\n            devengado: {\n                basico: devengadoBasico,\n                auxilioTrasporte: devengadoAuxilio,\n                total: devengadoTotal\n            },\n            deducciones: {\n                salud: deduccionSalud,\n                pension: deduccionPension,\n                total: deduccionTotal\n            },\n            netoPagado: devengadoTotal - deduccionTotal,\n            aportesParafiscales: {\n                Salud: parafiscalSalud,\n                FondoDePensiones: parafiscalFondoPensiones,\n                ARL: parafiscalARL,\n                Parafiscales: parafiscalParafiscales,\n                Prima: parafiscalPrima,\n                Cesantias: parafiscalCesantias,\n                InteresesDeCesantias: parafiscalInteresesCesantias,\n                Vacaciones: parafiscalVacaciones,\n                Dotacion: parafiscalDotacion,\n                total: prafiscalSubtotal + devengadoTotal - deduccionTotal,\n                subtotal: prafiscalSubtotal\n            }\n        })\n    }\n\n    formatMoney(amount, decimalCount = 2) {\n        try {\n            return amount.toFixed(decimalCount).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    getValidationState() {\n        const days = parseInt(this.state.value);\n        if (days < 30 && days > 0) return 'success';\n        else if (days < 0) return 'warning';\n        else if (days > 30) return 'error';\n        return null;\n    }\n\n    handleBasicChange(e) {\n        this.setState({ salarioBasico: e.target.value });\n    }\n\n    handleDaysChange(e){\n        this.setState({ dias: e.target.value });\n    }\n\n    render() {\n        return (\n            <Grid>\n                <Row className=\"show-grid\">\n                    <Col xs={12} md={12} lg={12}>\n                        <h1>Calculadora de Salarios</h1>\n                        <form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <InputGroup>\n                                    <InputGroup.Addon>Sueldo Básico $</InputGroup.Addon>\n                                    <FormControl type=\"text\"\n                                        value={this.formatMoney(this.state.salarioBasico)}\n                                        onChange={this.handleBasicChange} />\n                                    <InputGroup.Addon>.00</InputGroup.Addon>\n                                </InputGroup>\n                            </FormGroup>\n\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                                validationState={this.getValidationState()}\n                            >\n                                <InputGroup>\n                                    <InputGroup.Addon>Días Liquidados</InputGroup.Addon>\n                                    <FormControl\n                                        type=\"text\"\n                                        value={this.state.dias}\n                                        placeholder=\"Entre 1 y 30 días\"\n                                        onChange={this.handleDaysChange}\n                                    />\n\n                                    <FormControl.Feedback />\n                                </InputGroup>\n                                <HelpBlock></HelpBlock>\n                            </FormGroup>\n                            <Button type=\"submit\">Calcular</Button>\n                        </form>\n\n                        <hr></hr>\n                        <div className=\"payroll-list-output\">\n                            <ListGroup>\n                                <ListGroupItem header=\"DEVENGADO\" bsStyle=\"info\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Básico\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.devengado.basico)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Auxilio de Trasporte\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.devengado.auxilioTrasporte)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong></strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong></strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"DEDUCCIONES\" bsStyle=\"danger\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Salud (4%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.deducciones.salud)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Pension (4%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.deducciones.pension)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>Total Deducciones</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.deducciones.total)}</strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"Neto Pagado\" bsSize=\"success\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.netoPagado)}</strong>\n                                            </Col>\n                                        </Row>\n                                    </Grid>\n                                </ListGroupItem>\n                                <ListGroupItem header=\"Aportes Parafiscales\" bsStyle=\"info\">\n                                    <Grid>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Salud (8.5%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Salud)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Fondo de Pensiones (12%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.FondoDePensiones)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                ARL (0.52%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.ARL)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Parafiscales (9%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Parafiscales)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Prima (8.33%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\" >\n                                                {this.formatMoney(this.state.aportesParafiscales.Prima)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Cesantias (8.33%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\" >\n                                                {this.formatMoney(this.state.aportesParafiscales.Cesantias)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Intereses de cesantias (1%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.InteresesDeCesantias)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Vacaciones (4.17%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Vacaciones)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                Dotacion (5%)\n                                    </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                {this.formatMoney(this.state.aportesParafiscales.Dotacion)}\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>SubTotal</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.aportesParafiscales.subtotal)}</strong>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"show-grid\">\n                                            <Col xs={8} md={8}>\n                                                <strong>Total</strong>\n                                            </Col>\n                                            <Col xs={4} md={4} className=\"payroll-list-money\">\n                                                <strong>{this.formatMoney(this.state.aportesParafiscales.total)}</strong>\n                                            </Col>\n                                        </Row>\n\n                                    </Grid>\n                                </ListGroupItem>\n                            </ListGroup>\n                        </div>\n                    </Col>\n                </Row>\n            </Grid>\n        )\n    }\n}\n\nexport default PayrollSimulator;","import React, { Component } from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport './App.css';\nimport CreditSimulator from './creditSimulaltor';\nimport PayrollSimulator from './payrollSimulator';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n\n    this.state = {\n      key: 2\n    };\n  }\n\n  handleSelect(key) {\n    console.log(`selected ${key}`);\n    this.setState({ key });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Tabs\n          activeKey={this.state.key}\n          onSelect={this.handleSelect}\n          id=\"controlled-tab\"\n        >\n          <Tab eventKey={1} title=\"Simulador de Créditos\">\n            <CreditSimulator />\n          </Tab>\n          <Tab eventKey={2} title=\"Simulador de Sueldos\">\n            <PayrollSimulator />\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}